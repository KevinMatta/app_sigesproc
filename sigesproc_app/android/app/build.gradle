plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.sigesproc.app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.sigesproc.app"
        minSdk 21
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        def buildTypeName = variant.buildType.name
        def flavorName = variant.productFlavors.collect { it.name }.join('')
        def variantName = flavorName + buildTypeName.capitalize()

        variant.outputs.all { output ->
            def outputDir = output.outputFile.parent
            def googleServicesTemplate = file("src/${variantName}/google-services-template.json")
            def googleServicesFile = file("${outputDir}/google-services.json")

            if (googleServicesTemplate.exists()) {
                def apiKey = System.getenv('GOOGLE_API_KEY')

                def googleServicesContent = googleServicesTemplate.text
                googleServicesContent = googleServicesContent.replace('${GOOGLE_API_KEY}', apiKey)

                googleServicesFile.text = googleServicesContent
            }
        }
    }
}

dependencies {
    implementation 'com.google.firebase:firebase-analytics:21.0.0'
    implementation 'com.google.firebase:firebase-messaging:23.1.1'
}

flutter {
    source = "../.."
}
